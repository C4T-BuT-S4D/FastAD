// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: scoreboard/scoreboard.proto

package scoreboard

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeamServiceState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamId        int64                  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ServiceId     int64                  `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ChecksTotal   int64                  `protobuf:"varint,3,opt,name=checks_total,json=checksTotal,proto3" json:"checks_total,omitempty"`
	ChecksPassed  int64                  `protobuf:"varint,4,opt,name=checks_passed,json=checksPassed,proto3" json:"checks_passed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamServiceState) Reset() {
	*x = TeamServiceState{}
	mi := &file_scoreboard_scoreboard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamServiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamServiceState) ProtoMessage() {}

func (x *TeamServiceState) ProtoReflect() protoreflect.Message {
	mi := &file_scoreboard_scoreboard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamServiceState.ProtoReflect.Descriptor instead.
func (*TeamServiceState) Descriptor() ([]byte, []int) {
	return file_scoreboard_scoreboard_proto_rawDescGZIP(), []int{0}
}

func (x *TeamServiceState) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamServiceState) GetServiceId() int64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *TeamServiceState) GetChecksTotal() int64 {
	if x != nil {
		return x.ChecksTotal
	}
	return 0
}

func (x *TeamServiceState) GetChecksPassed() int64 {
	if x != nil {
		return x.ChecksPassed
	}
	return 0
}

type Scoreboard struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TeamServiceStates []*TeamServiceState    `protobuf:"bytes,1,rep,name=team_service_states,json=teamServiceStates,proto3" json:"team_service_states,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Scoreboard) Reset() {
	*x = Scoreboard{}
	mi := &file_scoreboard_scoreboard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scoreboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scoreboard) ProtoMessage() {}

func (x *Scoreboard) ProtoReflect() protoreflect.Message {
	mi := &file_scoreboard_scoreboard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scoreboard.ProtoReflect.Descriptor instead.
func (*Scoreboard) Descriptor() ([]byte, []int) {
	return file_scoreboard_scoreboard_proto_rawDescGZIP(), []int{1}
}

func (x *Scoreboard) GetTeamServiceStates() []*TeamServiceState {
	if x != nil {
		return x.TeamServiceStates
	}
	return nil
}

type GetStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStateRequest) Reset() {
	*x = GetStateRequest{}
	mi := &file_scoreboard_scoreboard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateRequest) ProtoMessage() {}

func (x *GetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scoreboard_scoreboard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateRequest.ProtoReflect.Descriptor instead.
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return file_scoreboard_scoreboard_proto_rawDescGZIP(), []int{2}
}

type GetStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scoreboard    *Scoreboard            `protobuf:"bytes,1,opt,name=scoreboard,proto3" json:"scoreboard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStateResponse) Reset() {
	*x = GetStateResponse{}
	mi := &file_scoreboard_scoreboard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateResponse) ProtoMessage() {}

func (x *GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scoreboard_scoreboard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateResponse.ProtoReflect.Descriptor instead.
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return file_scoreboard_scoreboard_proto_rawDescGZIP(), []int{3}
}

func (x *GetStateResponse) GetScoreboard() *Scoreboard {
	if x != nil {
		return x.Scoreboard
	}
	return nil
}

var File_scoreboard_scoreboard_proto protoreflect.FileDescriptor

var file_scoreboard_scoreboard_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x54, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x22, 0x5a,
	0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x4c, 0x0a, 0x13,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x74, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x9d, 0x01, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x0f, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x34, 0x74, 0x2d,
	0x62, 0x75, 0x74, 0x2d, 0x73, 0x34, 0x64, 0x2f, 0x66, 0x61, 0x73, 0x74, 0x61, 0x64, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0xca, 0x02, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0xe2, 0x02, 0x16, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_scoreboard_scoreboard_proto_rawDescOnce sync.Once
	file_scoreboard_scoreboard_proto_rawDescData = file_scoreboard_scoreboard_proto_rawDesc
)

func file_scoreboard_scoreboard_proto_rawDescGZIP() []byte {
	file_scoreboard_scoreboard_proto_rawDescOnce.Do(func() {
		file_scoreboard_scoreboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_scoreboard_scoreboard_proto_rawDescData)
	})
	return file_scoreboard_scoreboard_proto_rawDescData
}

var file_scoreboard_scoreboard_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_scoreboard_scoreboard_proto_goTypes = []any{
	(*TeamServiceState)(nil), // 0: scoreboard.TeamServiceState
	(*Scoreboard)(nil),       // 1: scoreboard.Scoreboard
	(*GetStateRequest)(nil),  // 2: scoreboard.GetStateRequest
	(*GetStateResponse)(nil), // 3: scoreboard.GetStateResponse
}
var file_scoreboard_scoreboard_proto_depIdxs = []int32{
	0, // 0: scoreboard.Scoreboard.team_service_states:type_name -> scoreboard.TeamServiceState
	1, // 1: scoreboard.GetStateResponse.scoreboard:type_name -> scoreboard.Scoreboard
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_scoreboard_scoreboard_proto_init() }
func file_scoreboard_scoreboard_proto_init() {
	if File_scoreboard_scoreboard_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scoreboard_scoreboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scoreboard_scoreboard_proto_goTypes,
		DependencyIndexes: file_scoreboard_scoreboard_proto_depIdxs,
		MessageInfos:      file_scoreboard_scoreboard_proto_msgTypes,
	}.Build()
	File_scoreboard_scoreboard_proto = out.File
	file_scoreboard_scoreboard_proto_rawDesc = nil
	file_scoreboard_scoreboard_proto_goTypes = nil
	file_scoreboard_scoreboard_proto_depIdxs = nil
}
